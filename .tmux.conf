#!/bin/bash

# set this otherwise the text will become garbled
set -g utf8 on
set -g status-utf8 on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scroll-back history
set -g history-limit 99999

set -g default-terminal "screen-256color"

# C-b is not acceptable -- Vim uses it
unbind C-b
set -g prefix C-a
# pass through a ctrl-a if you press it twice
bind C-a send-prefix

# color status bar
set -g status-bg colour235
set -g status-fg white
# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

set -g status-right-length 65
# to have global ip and hostname paste the below 2 lines inside status-right
#( wget -O - -q icanhazip.com )
set -g status-right "\
#{?client_prefix,<Prefix>,} \
#{=22:pane_title} \
#[fg=white]#(ip addr show| grep 'inet .*global'| awk '{print $2}') \
"

# {{{ key Bindings
# toggle status line visibility
bind        S      set-option -g status
# use vim key bindings
setw -g mode-keys vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'C-v' rectangle-toggle
# copy to x clipboard too
bind -t vi-copy     y copy-pipe 'xclip -in -selection clipboard'
# move x clipboard into tmux paste buffer
bind                C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# interactively move one of tmux paste buffers into X clipboard
# or use Shift+Middle-click to select and Shift+Middle-click to paste
bind            M-=    choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -bi\""

# hjkl pane resize
bind -n M-h resize-pane -L 5
bind -n M-j resize-pane -D 5
bind -n M-k resize-pane -U 5
bind -n M-l resize-pane -R 5
# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."
bind -n M-p split-window 'ftpane'
# dont confirm
bind          & kill-window
bind          x kill-pane
bind          Bspace kill-session
bind -n F12 set-window-option synchronize-panes \; display "sync toggle"
# Easy bindings for split
unbind %
bind | split-window -h
bind - split-window -v
# }}}

set -g mouse on
set -g focus-events on


# start window indexing at one instead of zero
set-option -g base-index 1



# Smart pane switching with awareness of vim splits {{{
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# }}}


# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
