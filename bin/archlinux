#!/bin/bash
# commands to get an arch linux up and running.
# followiing the video of sean Bruen : Arch Linux : from post install to Xorg

# ENABLE EFI BOOT IN VIRTUAL BOX SETTINGS.

# rank mirrors
sudo cp /etc/pacman.d/mirrorlist  /etc/pacman.d/mirrorlist.bkp
sudo sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.bkp
sudo bash -c 'rankmirrors -n 6 /etc/pacman.d/mirrorlist.bkp > /etc/pacman.d/mirrorlist'

# setup install env
loadkeys us

# setup Disk
# 1.
# fdisk can handle all parittion tables
# fdisk /dev/sda # check 'm' for 'g', 'n' , 't',  and set EFI
# 2.
# gdisk is specifically for GPT so lets use gdisk
# gdisk /dev/sda  # enter console
# o  # new table
# n  # new partition
# <enter> # choose default for initial values
# +512M   # size of boot partition
# ef00    # type : EFI
# now make second,third partition etc
# n .. etc etc
# 3.
# FOR VMS
sgdisk -o /dev/sda
sgdisk -n 0:0:+512M /dev/sda # /boot partition
sgdisk -n 0:0:0     /dev/sda # /home partition
sgdisk -L
sgdisk -t 1:ef00
sgdisk -t 2:8300
# FOR bare metal
sgdisk -o /dev/sda
sgdisk -n 0:0:+512M /dev/sda  # /boot partition
sgdisk -n 0:0:+16G  /dev/sda  # SWAP partition
sgdisk -n 0:0:+100G /dev/sda  # / partition
sgdisk -n 0:0:0     /dev/sda  # /home partition
sgdisk -L
sgdisk -t 1:ef00
sgdisk -t 2:8200
# sample structure
# sda1   512MB   EFI_system(ef00)  /boot
# sda2   16G     LINUX_swap        SWAP
# sda3   100G    Linux_filesystem  /
# sda4   rem     Linux_filesystem  /home
boot=/dev/sda1
root=/dev/sda3
mkfs.fat -F32 $boot #EFI
mkfs.ext4 $root
mount $root /mnt
mkdir /mnt/boot
mount $boot /mnt/boot
mount /dev/sda4 /mnt/home

# setup Network
# wifi-menu         # use it to connect to wifi if needed
sudo sed 's/^#TotalD/TotalD/' -i /etc/pacman.conf
pacstrap /mnt base
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt
passwd  # change root password
# install pre-req for wifi-menu
pacman -S dialog wpa_supplicant

# use systemd-boot
# setup systemd-boot bootloader
bootctl --path=/boot install
# make conf file (https://wiki.archlinux.org/index.php/Systemd-boot#Configuration)
cat <<EOF > /boot/loader/loader.conf
default  arch
timeout  4
editor   0
EOF
# this will help in getting PARTUUID into arch.conf
# blkid -s PARTUUID -o value $root >> /boot/loader/enrtries/arch.conf
cat <<EOF > /boot/loader/entries/arch.conf
title Arch Linux
linux /vmlinuz-linux
initrd /initramfs-linux.img
options root=PARTUUID=asdfsadf-asdf-asdf rw
EOF

# change default boot to HARD DISK
# systemctl reboot # REBOOT/Vagrant setup start ===========================
sed 's/^#TotalD/TotalD/' -i /etc/pacman.conf
pacman -Syu
pacman -S sudo
if [[ $(dmidecode -s bios-version) =~ VirtualBox ]] ; then
pacman -S virtualbox-guest-modules-arch virtualbox-guest-utils
cat <<EOF > ~/.xinitrc.local
VBoxClient-all
EOF
fi
bash -c 'echo "kernel.sysrq=1" >> /etc/sysctl.d/99-sysctl.conf'
# echo "rivendell" > /etc/hostname
hostnamectl set-hostname rivnedell
timedatectl set-timezone Asia/Kolkata
# uncomment en_US in locale.gen
sed -r -i'.bak' 's/#(en_US.*)/\1/' /etc/locale.gen
locale-gen
# VVI else special characters wont be reco in vim and tmux
bash -c 'echo "LANG=en_US.UTF-8" > /etc/locale.conf'
bash -c 'echo "KEYMAP=us" > /etc/vconsole.conf'
# enable network through netctl
cp /etc/netctl/examples/ethernet-dhcp /etc/netctl/ethernet
sed -i 's/eth0/enp0s3/' /etc/netctl/ethernet
# edit ethernet link name
netctl start ethernet
netctl enable ethernet
ping google.com

# USER CREATION
useradd -m -g users -s /bin/bash murali
gpasswd -a murali wheel
passwd murali
echo " see edit from 2:00 - 2:20 "
ln -s /usr/share/zoneinfo/Reginon/City /etc/localtime
hwclock --systohc
echo "visudo /etc/sudoers"
echo "dulpicate root ..murali ALL"
echo "give permission to wheel group by uncommenting the line below"
# to make pacman and yaourt work behind proxy
sudo sh -c 'echo Defaults env_keep += \"http_proxy https_proxy ftp_proxy\" >> /etc/sudoers'


# setup OS with basic utilities
# INSTALL BASIC STUFF TMUX VIM ZSH etc`
sudo pacman --noconfirm -S \
  fakeroot git jshon wget make pkg-config \
  autoconf automake patch expac zsh tmux   \
  python gvim ttf-freefont binutils
# INSTALL BASIC XSERVER WITH AWESOME
sudo pacman --noconfirm -S \
  alsa-utils xorg-server xorg-xinit xorg-apps mesa awesome \
  xf86-video-vesa xterm rxvt-unicode xsel xclip xf86-input-synaptics xf86-video-intel
sudo modprobe -a vboxguest vboxsf vboxvideo # or
cat <<EOF > /usr/lib/modules-load.d/virtualbox.conf
vboxguest
vboxsf
vboxvideo
EOF
sudo systemctl enable vboxservice.service
lspci | grep VGA # to see the graphics driver
pacman -Ss xf86-video | less # and install the direver of g-card
# startx should work now

# setup yaourt
wget http://aur.archlinux.org/cgit/aur.git/snapshot/packer.tar.gz
tar zxvf packer.tar.gz
cd packer && makepkg
sudo pacman -U ~/packer/packer-20*.pkg.tar.xz --noconfirm
packer -S yaourt --noconfirm
git clone 'https://github.com/muralisc/dotfiles'
~/dotfiles/install.sh

# enable auto-login
sudo systemctl edit getty@tty1
sudo mkdir -p /etc/systemd/system/getty@tty1.service.d
USERNAME=vagrant
sudo sh -c 'cat << EOF >> /etc/systemd/system/getty@tty1.service.d/override.conf
[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin '$USERNAME' --noclear %I $TERM
EOF
'

# setup AWESOME WM
yaourt -S vicious light-git urxvt-perls urxvt-resize-font-git urxvt-vtwheel --noconfirm
# i love conveniance: alt-tab, lock , menu
# install morc_menu from github
# checkout https://wiki.archlinux.org/index.php/xdg-menu#xdg_menu
yaourt -S --noconfirm dmenu rofi-git i3lock archlinux-xdg-menu
echo "skip from 9:20 to 10:50 "
echo "skip from 11:00 to 14.38 "
sudo systemctl reboot
# check awesome working
# prevent suspend when lid is closed
sudo sed -i 's/#HandleLidSwitch=.*/HandleLidSwitch=ignore/' /etc/systemd/logind.conf

# Good font is very important
yaourt -S --noconfirm ttf-ubuntu-font-family
# needed for bold
yaourt -S --noconfirm ttf-dejavu
# Browser
yaourt -S --noconfirm yajl firefox
# most basic stuff
yaourt -S --noconfirm \
  perl-rename sed rsync tar gzip feh gawk \
  gcc gdb gnuplot grep groff openssh unzip
# monitors
yaourt -S --noconfirm htop vnstat
# for terminal git and git-gui
yaourt -S --noconfirm tig tk
# bluetooth wifi
yaourt -S --noconfirm bluez bluez-utils iw
# just get the audio working !!!
yaourt -S --noconfirm pavucontrol pacmixer pulsemixer pulseaudio pulseaudio-alsa pulseaudio-bluetooth
# movies tv songs
yaourt -S --noconfirm mpd mpc ncmpcpp mpv puddletag beets
# RANGER STUFF
yaourt -S --noconfirm ranger w3m ffmpeg ffmpegthumbnailer imagemagick mediainfo
# MOBILE
yaourt -S --noconfirm jmtpfs
# i love beauty
yaourt -S --noconfirm compton-git lxappearance
# beautiful icon and mouse
yaourt -S --noconfirm adwaita-x-dark-and-light-theme bibata-cursor-theme numix-icon-theme-git
# for the tinkering me
yaourt -S --noconfirm xorg-xprop xorg-xev xorg-xwininfo
# SECURITY
# https://2buntu.com/articles/1503/pgp-and-ssh-keys-generate-export-backup-and-restore
# http://www.integralist.co.uk/posts/security-basics.html
# https://alexcabal.com/creating-the-perfect-gpg-keypair
yaourt -S --noconfirm gnupg pass
# screen recording
yaourt -S --noconfirm peek
# i love to learn
yaourt -S --noconfirm anki zathura zathura-pdf-poppler zathura-ps #for pdf backup use firefox,even shows comments
# for the creative me
yaourt -S --noconfirm kdebase-runtime kdenlive inkscape gimp
# i love more beauty ; graphics stuff
yaourt -S --noconfirm bumblebee nvidia lib32-mesa-libgl lib32-nvidia-utils bbswitch
# when friends who use windows comes over
yaourt -S --noconfirm ntfs-3g
# internet tools
yaourt -S --noconfirm rtorrent dropbox youtube-dl
# enable dropbox
systemctl --user enable dropbox.service
vim ~/.config/systemd/user/dropbox@.service  # Add display env
# remote tools
yaourt -S --noconfirm tigervnc sshfs
# i dont like mouse
yaourt -S --noconfirm keynav-git
# i like to type better; keylogger ;)
yaourt -S --noconfirm logkeys-git
# accessibility when i am sitting faar away
yaourt -S --noconfirm xzoom
# i have java ; but we need it anyway :(
yaourt -S --noconfirm jre8-openjdk
# when things break down ( for external wifi dongle)
yaourt -S --noconfirm mt7601u-git
# old stuff
yaourt -S --noconfirm submarine subliminal # subtitle stuff
#linux commandline dcpp client`
yaourt -S --noconfirm ncdc
# usb device automount using ( devmon )
udevil
# Edit the UEFI menu
efibootmgr
#
cronie
sudo systemctl enable cronie
# accounting
yaourt -S --noconfirm ledger


# get the gpg file from location
# check pass in mobile for the password
gpg --decrypt file.gpg > file.tar
# Bad session key error is due to wrong password
tar xf <file>.tar
gpg --import subkey.gpg
gpg --list-keys
gpg --edit-key <key-id> # then trust and quit

# for pass
1. clone bitbucket
1. mv pass .password-store
1. pass
